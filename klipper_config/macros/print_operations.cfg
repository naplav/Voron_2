[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bed_temp = params.BED_TEMP|default(110)|int %}
    {% set chamber_temp = params.CHAMBER_TEMP|default(0)|int %}
    {% set hotend_temp = params.HOTEND_TEMP|default(240)|int %}
	  {% set first_layer_size = params.SIZE|default("0_0_300_300")|string %}
    {% set relative_extruder = params.RELATIVE_E_MODE|default(false)|string %}

    G90 ;Absolute positioning
    M220 S100 ;Reset feedrate
    #M221 S100 ;Reset flowrate
    {% if relative_extruder|lower == 'true' %}
      M83 ;Set extruder to relative mode
    {% else %}
      M82 ;Set extruder to absolute mode
    {% endif %}

    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0.0 MOVE=0   ; Zero the Z index again
    SET_PIN PIN=caselight VALUE=0.1

    M117 Homing XYZ
    CG28
    G0 X150 Y150 Z20 F6000        ; Move to middle

    STATUS_HEATING
    M117 Heating bed and chamber 

    M190 S{bed_temp}  ; set & wait for bed temp
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={chamber_temp} ; wait for chamber

    M117 Levelling Gantry
    CQGL

    _FILTER_ON    #NEVERMORE

    STATUS_HEATING
    M117 Preheating Nozzle
    M109 S180

    M117 Cleaning Nozzle
    CLEAN_NOZZLE

    M117 Calibrate Z
    CALIBRATE_Z

    M117 Probing Bed Mesh
    COMPUTE_MESH_PARAMETERS SIZE={first_layer_size}
	  ADAPTIVE_BED_MESH SIZE={first_layer_size} 

    STATUS_HEATING
    M117 Heating Nozzle
    M109 S{hotend_temp}    
    

    STATUS_PRINTING

    M117 Purge Line
    NOZZLE_PRIME_LINE

    M117 Printing

    {% if bed_temp > 70 %}
      _CHAMBER_FAN_45
    {% else %}:
      _CHAMBER_FAN_30
    {% endif %}

[gcode_macro PRINT_END]
description: "G-code to run at the end of a print. Replace your slicer's end G-code with this"
gcode:
  SAVE_GCODE_STATE NAME=STATE_PRINT_END

  M400                           ; wait for buffer to clear
  TURN_OFF_HEATERS
  SAFE_RETRACT
  SAFE_PARK
   
  M220 S100 ;Reset Speed factor override percentage to default (100%)
  M221 S100 ;Reset Extrude factor override percentage to default (100%)

  M84 X Y E ;Disable all steppers but Z
  
  BED_MESH_CLEAR 
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
  _CHAMBER_FAN_30
  SET_PIN PIN=caselight VALUE=0.1

  M106 S0   ; part fan off

  M117 Print Complete

[gcode_macro CANCEL_PRINT]
description: "Cancel the running print"
rename_existing: CANCEL_PRINT_BASE
gcode:
  M400                           ; wait for buffer to clear
  TURN_OFF_HEATERS
  SAFE_RETRACT
  SAFE_PARK

  M107 ;Turn off fan
  M220 S100 ;Reset Speed factor override percentage to default (100%)
  M221 S100 ;Reset Extrude factor override percentage to default (100%)

  SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  SAVE_GCODE_STATE NAME=print_pause

  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}

  PAUSE_BASE

  SAFE_RETRACT
  SAFE_PARK

  RESTORE_GCODE_STATE NAME=print_pause

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91; Use relative coordinates
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro SAFE_PARK]
description:
  "Park the print head in a safe location
  @param {float} [X=300] - The target X location
  @param {float} [Y=300] - The target Y location
  @param {bool} [Z_MOVE=true] - Whether or not to move the Z axis. This can be useful if you've already moved on Z"
gcode:
  SAVE_GCODE_STATE NAME=safe_park

  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  {% set x_park = params.X|default(printer.toolhead.axis_maximum.x - 5.0)|float %}
  {% set y_park = params.Y|default(printer.toolhead.axis_maximum.y - 5.0)|float %}
  {% set z_park = params.Z|default(printer.toolhead.axis_maximum.z - 5.0)|float %}
  {% set should_park_z = params.Z_MOVE|default('true')|string %}
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set current_z = printer.toolhead.position.z|float %}
  {% set jump_z = 20.0|float %}
  {% if (current_z + jump_z) < max_z %}
    {% set z_safe = (current_z + jump_z) %}
  {% else %}
    {% set z_safe = max_z %}
  {% endif %}
  ##### end of definitions #####

  {% if "xyz" in printer.toolhead.homed_axes %}
    G90 ;Use absolute coordinates
    {% if should_park_z|lower == 'true' %}
      G1 Z{z_safe} F1500
    {% endif %}
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_park

[gcode_macro SAFE_RETRACT]
description: Retract
gcode:
  SAVE_GCODE_STATE NAME=safe_retract

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83 ;Relative extrusion
    G91 ;Relative positioning

    G1 E-2 F1500 ;Retract filament 2mm to prevent oozing
    G1 Z0.2 F2400 ;Raise Z
    G1 E-2 F1500 ;Retract filament 2mm to prevent oozing
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_retract

[gcode_macro NOZZLE_PRIME_LINE]
description:
  Prime the nozzle by laying a strip of plastic along the front of the bed
gcode:
  SAVE_GCODE_STATE NAME=nozzle_prime_state

  {% set pi = 3.1415926536 %}
  {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter %}
  {% set filament_diam = printer.configfile.settings.extruder.filament_diameter %}
  #{% set retract_len = printer.configfile.settings.firmware_retraction.retract_length %}
  {% set layer_height = nozzle_diam * 0.75 %}
  {% set line_width = nozzle_diam * 1.75 %}
  {% set x_start = 295 %}
  {% set x1 = 200 %}
  {% set x2 = 100 %}
  {% set x_end = 5 %}
  {% set y_start = 5 %}
  {% set y1 = 5 %}
  {% set y2 = y1 + line_width %}
  {% set y3 = y2 + line_width %}
  {% set y_end = 5 %}
  {% set x_diff = x1 - x2 %}
  {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height) %}
  {% set extrude_vol = x_diff * extrude_cross_section_area %}
  {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2) %}
  ##### end of definitions #####

  G90 ;Absolute positioning
  M82 ;Absolute extrusion
  G92 E0 ;Reset extruder

  G1 X{x_start} Y{y_start} Z5 F6000 ;Move Z axis up

  G1 X{x1} Y{y1} Z{layer_height} F6000
  G1 X{x2} Y{y1} Z{layer_height} F1500 E{extrude_len} ;Start priming wipe
  G1 X{x2} Y{y2} Z{layer_height} F6000
  G1 X{x1} Y{y2} Z{layer_height} F1500 E{extrude_len * 2} ;Finish priming wipe
  G1 X{x1} Y{y3} Z{layer_height} F6000
  G1 X{x2} Y{y3} Z{layer_height} F1500 E{extrude_len * 3} ;Finish priming wipe

  G1 X{x_end} Y{y_end} Z5 F6000.0 ;Move Z axis up
  #G1 E{(extrude_len * 3)} F1500 ;Move Z axis up & retract
  G92 E0 ;Reset extruder

  RESTORE_GCODE_STATE NAME=nozzle_prime_state

[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X5 Y30 Z0.28 F5000.0 ;Move to start position
    G1 X5 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X7 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X7 Y50 Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up